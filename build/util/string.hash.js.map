{"version":3,"sources":["../../src/util/string.hash.js"],"names":["hashPassword","password","length","key","crypto","pbkdf2Sync","toString","hashToken","size","buf","randomBytes"],"mappings":";;;;;;;AAAA;;;;;;AAEO,IAAMA,sCAAe,SAAfA,YAAe,CAACC,QAAD,EAA2B;AAAA,MAAhBC,MAAgB,uEAAP,EAAO;;AACrD,MAAMC,MAAMC,iBAAOC,UAAP,CAAkBJ,QAAlB,EAA4B,aAA5B,EAA2C,MAA3C,EAAmDC,MAAnD,EAA2D,QAA3D,CAAZ;AACA,SAAOC,IAAIG,QAAJ,CAAa,KAAb,CAAP;AACD,CAHM;;AAKA,IAAMC,gCAAY,SAAZA,SAAY,GAAe;AAAA,MAAdC,IAAc,uEAAP,EAAO;;AACtC,MAAMC,MAAML,iBAAOM,WAAP,CAAmBF,IAAnB,CAAZ;AACA,SAAOC,IAAIH,QAAJ,CAAa,KAAb,CAAP;AACD,CAHM","file":"string.hash.js","sourcesContent":["import crypto from 'crypto'\n\nexport const hashPassword = (password, length = 64) => {\n  const key = crypto.pbkdf2Sync(password, 'dodoN9@#48^', 100000, length, 'sha512')\n  return key.toString('hex')\n}\n\nexport const hashToken = (size = 50) => {\n  const buf = crypto.randomBytes(size)\n  return buf.toString('hex')\n}\n"]}