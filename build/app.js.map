{"version":3,"sources":["../src/app.js"],"names":["app","dbConnect","mongoose","connect","process","env","MONGO_URL","MONGO_DB","useNewUrlParser","then","stdout","write","stderr","exit","nextTick","dbDisconnect","disconnect","done","use","AuthRoute","TestRoute"],"mappings":";;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;AA8BA;;;;AACA;;;;;;AA/BkC;AAClC,IAAMA,MAAM,wBAAZ;;AAEA;;;;AAIO,IAAMC,gCAAY,SAAZA,SAAY,GAAM;AAC9BC,oBAASC,OAAT,CAAoBC,QAAQC,GAAR,CAAYC,SAAhC,SAA6CF,QAAQC,GAAR,CAAYE,QAAzD,EACA,EAAEC,iBAAiB,IAAnB,EADA,EAECC,IAFD,CAGC;AAAA,SAAOL,QAAQM,MAAR,CAAeC,KAAf,iDAAP;AAAA,EAHD,EAIC,eAAO;AACNP,UAAQQ,MAAR,CAAeD,KAAf,CAAqB,6CAArB;AACA,SAAOP,QAAQS,IAAR,CAAa,CAAb,CAAP;AACA,EAPF;AASA,CAVM;AAWPT,QAAQU,QAAR,CAAiBb,SAAjB;AACA;AACO,IAAMc,sCAAe,SAAfA,YAAe,OAAQ;AACnCb,oBAASc,UAAT,CAAoBC,IAApB;AACA,CAFM;;AAIP;AACA,mCAAkBjB,GAAlB;;AAEA;;;;;AAMA;;;AAGAA,IAAIkB,GAAJ,CAAQ,OAAR,EAAiBC,cAAjB;AACAnB,IAAIkB,GAAJ,CAAQ,GAAR,EAAaE,cAAb;;kBAEepB,G","file":"app.js","sourcesContent":["import express from 'express'\nimport mongoose from 'mongoose'\nimport { connectMiddleware } from './util/middleware.app'\nimport './util/manageProcess.app' /* for managing process efficiently w.r.t exit code */\nconst app = express()\n\n/*\n\tmongodb connection URI\n\tmongodb://root:alterhopN9@ds227332.mlab.com:27332/alterhop\n*/\nexport const dbConnect = () => {\n\tmongoose.connect(`${process.env.MONGO_URL}/${process.env.MONGO_DB}`,\n\t{ useNewUrlParser: true })\n\t.then(\n\t\tres => process.stdout.write(`successfully connected to mongodb database \\n`),\n\t\terr => {\n\t\t\tprocess.stderr.write('Error occured during database connection \\n')\n\t\t\treturn process.exit(2)\n\t\t}\n\t)\n}\nprocess.nextTick(dbConnect)\n/* mongoose disconnect connection used for testing */\nexport const dbDisconnect = done => {\n\tmongoose.disconnect(done)\n}\n\n/* Connect middleware here */\nconnectMiddleware(app)\n\n/*\n\tRoutes defined here\n*/\nimport AuthRoute from './routes/auth.route'\nimport TestRoute from './routes/test.route'\n\n/*\n\tMiddleware for Routes connection defined here\n*/\napp.use('/auth', AuthRoute)\napp.use('/', TestRoute)\n\nexport default app\n"]}